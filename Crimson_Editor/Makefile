# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug)
  ifeq ($(origin CC), default)
    CC = gcc
  endif
  ifeq ($(origin CXX), default)
    CXX = g++
  endif
  ifeq ($(origin AR), default)
    AR = ar
  endif
  RESCOMP = windres
  TARGETDIR = ../bin/Debug-windows-x86_64/Crimson_Editor
  TARGET = $(TARGETDIR)/Crimson_Editor.exe
  OBJDIR = ../bin-int/Debug-windows-x86_64/Crimson_Editor
  DEFINES += -DCN_PLATFORM_WINDOWS -DCN_DEBUG -DCN_ENABLE_ASSERTS
  INCLUDES += -I../Crimson/vendor/spdlog/include -I../Crimson/src -I../Crimson/vendor -I../Crimson/vendor/Chroma -I../Crimson/vendor/imgui -I../Crimson/vendor/glm -I../Crimson/vendor/entt -I../Crimson/vendor/Curl/include -I../Crimson/vendor/jsoncpp -I../Crimson/vendor/physx_x64-windows/include -I../Crimson/vendor/ImGuizmo -I../Crimson/vendor/yaml-cpp/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -w /utf-8
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -w -std=c++17 /utf-8
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../bin/Debug-windows-x86_64/Crimson/Crimson.lib
  LDDEPS += ../bin/Debug-windows-x86_64/Crimson/Crimson.lib
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF EXIST "..\Crimson\vendor\assimp\dll\*.dll"\ (xcopy /Q /E /Y /I "..\Crimson\vendor\assimp\dll\*.dll" "..\bin\Debug-windows-x86_64\Crimson_Editor\" > nul) ELSE (xcopy /Q /Y /I "..\Crimson\vendor\assimp\dll\*.dll" "..\bin\Debug-windows-x86_64\Crimson_Editor\" > nul)
	IF EXIST "..\Crimson\vendor\physx_x64-windows\dll\*.dll"\ (xcopy /Q /E /Y /I "..\Crimson\vendor\physx_x64-windows\dll\*.dll" "..\bin\Debug-windows-x86_64\Crimson_Editor\" > nul) ELSE (xcopy /Q /Y /I "..\Crimson\vendor\physx_x64-windows\dll\*.dll" "..\bin\Debug-windows-x86_64\Crimson_Editor\" > nul)
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release)
  ifeq ($(origin CC), default)
    CC = gcc
  endif
  ifeq ($(origin CXX), default)
    CXX = g++
  endif
  ifeq ($(origin AR), default)
    AR = ar
  endif
  RESCOMP = windres
  TARGETDIR = ../bin/Release-windows-x86_64/Crimson_Editor
  TARGET = $(TARGETDIR)/Crimson_Editor.exe
  OBJDIR = ../bin-int/Release-windows-x86_64/Crimson_Editor
  DEFINES += -DCN_PLATFORM_WINDOWS -DCN_RELEASE
  INCLUDES += -I../Crimson/vendor/spdlog/include -I../Crimson/src -I../Crimson/vendor -I../Crimson/vendor/Chroma -I../Crimson/vendor/imgui -I../Crimson/vendor/glm -I../Crimson/vendor/entt -I../Crimson/vendor/Curl/include -I../Crimson/vendor/jsoncpp -I../Crimson/vendor/physx_x64-windows/include -I../Crimson/vendor/ImGuizmo -I../Crimson/vendor/yaml-cpp/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 /utf-8
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17 /utf-8
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../bin/Release-windows-x86_64/Crimson/Crimson.lib
  LDDEPS += ../bin/Release-windows-x86_64/Crimson/Crimson.lib
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF EXIST "..\Crimson\vendor\assimp\dll\*.dll"\ (xcopy /Q /E /Y /I "..\Crimson\vendor\assimp\dll\*.dll" "..\bin\Release-windows-x86_64\Crimson_Editor\" > nul) ELSE (xcopy /Q /Y /I "..\Crimson\vendor\assimp\dll\*.dll" "..\bin\Release-windows-x86_64\Crimson_Editor\" > nul)
	IF EXIST "..\Crimson\vendor\physx_x64-windows\dll\*.dll"\ (xcopy /Q /E /Y /I "..\Crimson\vendor\physx_x64-windows\dll\*.dll" "..\bin\Release-windows-x86_64\Crimson_Editor\" > nul) ELSE (xcopy /Q /Y /I "..\Crimson\vendor\physx_x64-windows\dll\*.dll" "..\bin\Release-windows-x86_64\Crimson_Editor\" > nul)
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),dist)
  ifeq ($(origin CC), default)
    CC = gcc
  endif
  ifeq ($(origin CXX), default)
    CXX = g++
  endif
  ifeq ($(origin AR), default)
    AR = ar
  endif
  RESCOMP = windres
  TARGETDIR = ../bin/Dist-windows-x86_64/Crimson_Editor
  TARGET = $(TARGETDIR)/Crimson_Editor.exe
  OBJDIR = ../bin-int/Dist-windows-x86_64/Crimson_Editor
  DEFINES += -DCN_PLATFORM_WINDOWS -DCN_DIST
  INCLUDES += -I../Crimson/vendor/spdlog/include -I../Crimson/src -I../Crimson/vendor -I../Crimson/vendor/Chroma -I../Crimson/vendor/imgui -I../Crimson/vendor/glm -I../Crimson/vendor/entt -I../Crimson/vendor/Curl/include -I../Crimson/vendor/jsoncpp -I../Crimson/vendor/physx_x64-windows/include -I../Crimson/vendor/ImGuizmo -I../Crimson/vendor/yaml-cpp/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 /utf-8
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17 /utf-8
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../bin/Dist-windows-x86_64/Crimson/Crimson.lib
  LDDEPS += ../bin/Dist-windows-x86_64/Crimson/Crimson.lib
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF EXIST "..\Crimson\vendor\assimp\dll\*.dll"\ (xcopy /Q /E /Y /I "..\Crimson\vendor\assimp\dll\*.dll" "..\bin\Dist-windows-x86_64\Crimson_Editor\" > nul) ELSE (xcopy /Q /Y /I "..\Crimson\vendor\assimp\dll\*.dll" "..\bin\Dist-windows-x86_64\Crimson_Editor\" > nul)
	IF EXIST "..\Crimson\vendor\physx_x64-windows\dll\*.dll"\ (xcopy /Q /E /Y /I "..\Crimson\vendor\physx_x64-windows\dll\*.dll" "..\bin\Dist-windows-x86_64\Crimson_Editor\" > nul) ELSE (xcopy /Q /Y /I "..\Crimson\vendor\physx_x64-windows\dll\*.dll" "..\bin\Dist-windows-x86_64\Crimson_Editor\" > nul)
  endef
all: prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/CrimsonEditor.o \
	$(OBJDIR)/ContentBrowser.o \
	$(OBJDIR)/MaterialEditor.o \
	$(OBJDIR)/SceneHierarchy.o \
	$(OBJDIR)/SandboxApp.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES) | $(TARGETDIR)
	@echo Linking Crimson_Editor
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(CUSTOMFILES): | $(OBJDIR)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Crimson_Editor
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink: $(OBJECTS)
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
else
$(OBJECTS): | $(OBJDIR)
endif

$(OBJDIR)/CrimsonEditor.o: src/CrimsonEditor.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ContentBrowser.o: src/Pannels/ContentBrowser.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MaterialEditor.o: src/Pannels/MaterialEditor.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SceneHierarchy.o: src/Pannels/SceneHierarchy.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SandboxApp.o: src/SandboxApp.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif