# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug)
  ifeq ($(origin CC), default)
    CC = gcc
  endif
  ifeq ($(origin CXX), default)
    CXX = g++
  endif
  ifeq ($(origin AR), default)
    AR = ar
  endif
  RESCOMP = windres
  TARGETDIR = ../bin/Debug-windows-x86_64/Crimson
  TARGET = $(TARGETDIR)/Crimson.lib
  OBJDIR = ../bin-int/Debug-windows-x86_64/Crimson
  PCH = src/cnpch.h
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -D_CRT_SECURE_NO_WARNINGS -DPX_PHYSX_STATIC_LIB -DYAML_CPP_STATIC_DEFINE -DCN_PLATFORM_WINDOWS -DCN_BUILD_DLL -DGLFW_INCLUDE_NONE -DCN_DEBUG -DCN_ENABLE_ASSERTS
  INCLUDES += -Ivendor/spdlog/include -Isrc -Ivendor/GLFW/include -Ivendor/Glad/include -Ivendor/imgui -Ivendor/Chroma -Ivendor/glm -Ivendor/stb -Ivendor/Curl/include -Ivendor/jsoncpp -Ivendor/entt -Ivendor/assimp/include -Ivendor/physx_x64-windows/include -Ivendor/yaml-cpp/include -Ivendor/oidn/include -Ivendor/ImGuizmo
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -w /utf-8 -finput-charset=UTF-8 -msse -mavx -Winvalid-pch -x c++-header
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -w -std=c++17 /utf-8 -finput-charset=UTF-8 -msse -mavx -Winvalid-pch -x c++-header
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += vendor/GLFW/bin/Debug-windows-x86_64/GLFW/GLFW.lib vendor/Glad/bin/Debug-windows-x86_64/Glad/Glad.lib vendor/Chroma/bin/Debug-windows-x86_64/Chroma/Chroma.lib vendor/imgui/bin/Debug-windows-x86_64/ImGui/ImGui.lib vendor/yaml-cpp/bin/Debug-windows-x86_64/yaml-cpp/yaml-cpp.lib -lopengl32.lib -lNormaliz.lib -lWs2_32.lib -lWldap32.lib -lCrypt32.lib -ladvapi32.lib -llibcurl_a_debug.lib -lassimp-vc143-mt.lib -l**.lib -lOpenImageDenoise.lib -lOpenImageDenoise_core.lib
  LDDEPS += vendor/GLFW/bin/Debug-windows-x86_64/GLFW/GLFW.lib vendor/Glad/bin/Debug-windows-x86_64/Glad/Glad.lib vendor/Chroma/bin/Debug-windows-x86_64/Chroma/Chroma.lib vendor/imgui/bin/Debug-windows-x86_64/ImGui/ImGui.lib vendor/yaml-cpp/bin/Debug-windows-x86_64/yaml-cpp/yaml-cpp.lib
  ALL_LDFLAGS += $(LDFLAGS) -Lvendor/Curl/lib -Lvendor/assimp/lib/x64 -Lvendor/physx_x64-windows/lib -Lvendor/oidn/lib -L/usr/lib64 -m64
  LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release)
  ifeq ($(origin CC), default)
    CC = gcc
  endif
  ifeq ($(origin CXX), default)
    CXX = g++
  endif
  ifeq ($(origin AR), default)
    AR = ar
  endif
  RESCOMP = windres
  TARGETDIR = ../bin/Release-windows-x86_64/Crimson
  TARGET = $(TARGETDIR)/Crimson.lib
  OBJDIR = ../bin-int/Release-windows-x86_64/Crimson
  PCH = src/cnpch.h
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -D_CRT_SECURE_NO_WARNINGS -DPX_PHYSX_STATIC_LIB -DYAML_CPP_STATIC_DEFINE -DCN_PLATFORM_WINDOWS -DCN_BUILD_DLL -DGLFW_INCLUDE_NONE -DCN_RELEASE -DNDEBUG
  INCLUDES += -Ivendor/spdlog/include -Isrc -Ivendor/GLFW/include -Ivendor/Glad/include -Ivendor/imgui -Ivendor/Chroma -Ivendor/glm -Ivendor/stb -Ivendor/Curl/include -Ivendor/jsoncpp -Ivendor/entt -Ivendor/assimp/include -Ivendor/physx_x64-windows/include -Ivendor/yaml-cpp/include -Ivendor/oidn/include -Ivendor/ImGuizmo
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 /utf-8 -finput-charset=UTF-8 -msse -mavx -Winvalid-pch -x c++-header
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17 /utf-8 -finput-charset=UTF-8 -msse -mavx -Winvalid-pch -x c++-header
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += vendor/GLFW/bin/Release-windows-x86_64/GLFW/GLFW.lib vendor/Glad/bin/Release-windows-x86_64/Glad/Glad.lib vendor/Chroma/bin/Release-windows-x86_64/Chroma/Chroma.lib vendor/imgui/bin/Release-windows-x86_64/ImGui/ImGui.lib vendor/yaml-cpp/bin/Release-windows-x86_64/yaml-cpp/yaml-cpp.lib -lopengl32.lib -lNormaliz.lib -lWs2_32.lib -lWldap32.lib -lCrypt32.lib -ladvapi32.lib -llibcurl_a_debug.lib -lassimp-vc143-mt.lib -l**.lib -lOpenImageDenoise.lib -lOpenImageDenoise_core.lib
  LDDEPS += vendor/GLFW/bin/Release-windows-x86_64/GLFW/GLFW.lib vendor/Glad/bin/Release-windows-x86_64/Glad/Glad.lib vendor/Chroma/bin/Release-windows-x86_64/Chroma/Chroma.lib vendor/imgui/bin/Release-windows-x86_64/ImGui/ImGui.lib vendor/yaml-cpp/bin/Release-windows-x86_64/yaml-cpp/yaml-cpp.lib
  ALL_LDFLAGS += $(LDFLAGS) -Lvendor/Curl/lib -Lvendor/assimp/lib/x64 -Lvendor/physx_x64-windows/lib -Lvendor/oidn/lib -L/usr/lib64 -m64 -s
  LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),dist)
  ifeq ($(origin CC), default)
    CC = gcc
  endif
  ifeq ($(origin CXX), default)
    CXX = g++
  endif
  ifeq ($(origin AR), default)
    AR = ar
  endif
  RESCOMP = windres
  TARGETDIR = ../bin/Dist-windows-x86_64/Crimson
  TARGET = $(TARGETDIR)/Crimson.lib
  OBJDIR = ../bin-int/Dist-windows-x86_64/Crimson
  PCH = src/cnpch.h
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -D_CRT_SECURE_NO_WARNINGS -DPX_PHYSX_STATIC_LIB -DYAML_CPP_STATIC_DEFINE -DCN_PLATFORM_WINDOWS -DCN_BUILD_DLL -DGLFW_INCLUDE_NONE -DCN_DIST
  INCLUDES += -Ivendor/spdlog/include -Isrc -Ivendor/GLFW/include -Ivendor/Glad/include -Ivendor/imgui -Ivendor/Chroma -Ivendor/glm -Ivendor/stb -Ivendor/Curl/include -Ivendor/jsoncpp -Ivendor/entt -Ivendor/assimp/include -Ivendor/physx_x64-windows/include -Ivendor/yaml-cpp/include -Ivendor/oidn/include -Ivendor/ImGuizmo
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 /utf-8 -finput-charset=UTF-8 -msse -mavx -Winvalid-pch -x c++-header
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17 /utf-8 -finput-charset=UTF-8 -msse -mavx -Winvalid-pch -x c++-header
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += vendor/GLFW/bin/Dist-windows-x86_64/GLFW/GLFW.lib vendor/Glad/bin/Dist-windows-x86_64/Glad/Glad.lib vendor/Chroma/bin/Dist-windows-x86_64/Chroma/Chroma.lib vendor/imgui/bin/Dist-windows-x86_64/ImGui/ImGui.lib vendor/yaml-cpp/bin/Dist-windows-x86_64/yaml-cpp/yaml-cpp.lib -lopengl32.lib -lNormaliz.lib -lWs2_32.lib -lWldap32.lib -lCrypt32.lib -ladvapi32.lib -llibcurl_a_debug.lib -lassimp-vc143-mt.lib -l**.lib -lOpenImageDenoise.lib -lOpenImageDenoise_core.lib
  LDDEPS += vendor/GLFW/bin/Dist-windows-x86_64/GLFW/GLFW.lib vendor/Glad/bin/Dist-windows-x86_64/Glad/Glad.lib vendor/Chroma/bin/Dist-windows-x86_64/Chroma/Chroma.lib vendor/imgui/bin/Dist-windows-x86_64/ImGui/ImGui.lib vendor/yaml-cpp/bin/Dist-windows-x86_64/yaml-cpp/yaml-cpp.lib
  ALL_LDFLAGS += $(LDFLAGS) -Lvendor/Curl/lib -Lvendor/assimp/lib/x64 -Lvendor/physx_x64-windows/lib -Lvendor/oidn/lib -L/usr/lib64 -m64 -s
  LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/OrthographicCameraController.o \
	$(OBJDIR)/Application.o \
	$(OBJDIR)/Layer.o \
	$(OBJDIR)/LayerStack.o \
	$(OBJDIR)/Log.o \
	$(OBJDIR)/ResourceManager.o \
	$(OBJDIR)/Subsystems.o \
	$(OBJDIR)/ImGuiBuild.o \
	$(OBJDIR)/ImGuiLayer.o \
	$(OBJDIR)/LoadMesh.o \
	$(OBJDIR)/Physics3D.o \
	$(OBJDIR)/BVH.o \
	$(OBJDIR)/RayTracer.o \
	$(OBJDIR)/Antialiasing.o \
	$(OBJDIR)/Atmosphere.o \
	$(OBJDIR)/Bloom.o \
	$(OBJDIR)/Buffer.o \
	$(OBJDIR)/Camera.o \
	$(OBJDIR)/EditorCamera.o \
	$(OBJDIR)/SceneCamera.o \
	$(OBJDIR)/CubeMapEnvironment.o \
	$(OBJDIR)/CubeMapReflection.o \
	$(OBJDIR)/DeferredRenderer.o \
	$(OBJDIR)/Fog.o \
	$(OBJDIR)/FoliageRenderer.o \
	$(OBJDIR)/FrameBuffer.o \
	$(OBJDIR)/GraphicsContext.o \
	$(OBJDIR)/Material.o \
	$(OBJDIR)/OrthographicCamera.o \
	$(OBJDIR)/RenderCommand.o \
	$(OBJDIR)/Renderer.o \
	$(OBJDIR)/Renderer2D.o \
	$(OBJDIR)/Renderer3D.o \
	$(OBJDIR)/RendererAPI.o \
	$(OBJDIR)/Shader.o \
	$(OBJDIR)/Shadows.o \
	$(OBJDIR)/SkyRenderer.o \
	$(OBJDIR)/SubTexture.o \
	$(OBJDIR)/Terrain.o \
	$(OBJDIR)/Texture.o \
	$(OBJDIR)/Entity.o \
	$(OBJDIR)/PointLight.o \
	$(OBJDIR)/Scene.o \
	$(OBJDIR)/SceneSerializer.o \
	$(OBJDIR)/OpenGLAntialiasing.o \
	$(OBJDIR)/OpenGLBloom.o \
	$(OBJDIR)/OpenGLBuffer.o \
	$(OBJDIR)/OpenGLContext.o \
	$(OBJDIR)/OpenGLCubeMapReflection.o \
	$(OBJDIR)/OpenGLDeferredRenderer.o \
	$(OBJDIR)/OpenGLFog.o \
	$(OBJDIR)/OpenGLFrameBuffer.o \
	$(OBJDIR)/OpenGLRendererAPI.o \
	$(OBJDIR)/OpenGLSSAO.o \
	$(OBJDIR)/OpenGLShader.o \
	$(OBJDIR)/OpenGLShadows.o \
	$(OBJDIR)/OpenGLTexture.o \
	$(OBJDIR)/OpenGLTexture2D.o \
	$(OBJDIR)/OpenGLTexture2DArray.o \
	$(OBJDIR)/OpenGLVertexArray.o \
	$(OBJDIR)/WindowsInput.o \
	$(OBJDIR)/WindowsWindow.o \
	$(OBJDIR)/cnpch.o \
	$(OBJDIR)/ImGuizmo.o \
	$(OBJDIR)/jsoncpp.o \
	$(OBJDIR)/stb.o \
	$(OBJDIR)/stb_impl.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES) | $(TARGETDIR)
	@echo Linking Crimson
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(CUSTOMFILES): | $(OBJDIR)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Crimson
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink: $(OBJECTS)
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
else
$(OBJECTS): | $(OBJDIR)
endif

$(OBJDIR)/OrthographicCameraController.o: src/Crimson/Controller/OrthographicCameraController.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Application.o: src/Crimson/Core/Application.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Layer.o: src/Crimson/Core/Layer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LayerStack.o: src/Crimson/Core/LayerStack.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Log.o: src/Crimson/Core/Log.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ResourceManager.o: src/Crimson/Core/ResourceManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Subsystems.o: src/Crimson/Core/Subsystems.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiBuild.o: src/Crimson/ImGui/ImGuiBuild.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiLayer.o: src/Crimson/ImGui/ImGuiLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LoadMesh.o: src/Crimson/Mesh/LoadMesh.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Physics3D.o: src/Crimson/Physics/Physics3D.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BVH.o: src/Crimson/RayTracer/BVH.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RayTracer.o: src/Crimson/RayTracer/RayTracer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Antialiasing.o: src/Crimson/Renderer/Antialiasing.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Atmosphere.o: src/Crimson/Renderer/Atmosphere.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Bloom.o: src/Crimson/Renderer/Bloom.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Buffer.o: src/Crimson/Renderer/Buffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Camera.o: src/Crimson/Renderer/Cameras/Camera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EditorCamera.o: src/Crimson/Renderer/Cameras/EditorCamera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SceneCamera.o: src/Crimson/Renderer/Cameras/SceneCamera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CubeMapEnvironment.o: src/Crimson/Renderer/CubeMapEnvironment.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CubeMapReflection.o: src/Crimson/Renderer/CubeMapReflection.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DeferredRenderer.o: src/Crimson/Renderer/DeferredRenderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Fog.o: src/Crimson/Renderer/Fog.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FoliageRenderer.o: src/Crimson/Renderer/FoliageRenderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FrameBuffer.o: src/Crimson/Renderer/FrameBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GraphicsContext.o: src/Crimson/Renderer/GraphicsContext.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Material.o: src/Crimson/Renderer/Material.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OrthographicCamera.o: src/Crimson/Renderer/OrthographicCamera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RenderCommand.o: src/Crimson/Renderer/RenderCommand.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer.o: src/Crimson/Renderer/Renderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer2D.o: src/Crimson/Renderer/Renderer2D.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer3D.o: src/Crimson/Renderer/Renderer3D.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RendererAPI.o: src/Crimson/Renderer/RendererAPI.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Shader.o: src/Crimson/Renderer/Shader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Shadows.o: src/Crimson/Renderer/Shadows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SkyRenderer.o: src/Crimson/Renderer/SkyRenderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SubTexture.o: src/Crimson/Renderer/SubTexture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Terrain.o: src/Crimson/Renderer/Terrain.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Texture.o: src/Crimson/Renderer/Texture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Entity.o: src/Crimson/Scene/Entity.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PointLight.o: src/Crimson/Scene/PointLight.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Scene.o: src/Crimson/Scene/Scene.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SceneSerializer.o: src/Crimson/Scene/SceneSerializer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLAntialiasing.o: src/Platform/OpenGL/OpenGLAntialiasing.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLBloom.o: src/Platform/OpenGL/OpenGLBloom.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLBuffer.o: src/Platform/OpenGL/OpenGLBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLContext.o: src/Platform/OpenGL/OpenGLContext.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLCubeMapReflection.o: src/Platform/OpenGL/OpenGLCubeMapReflection.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLDeferredRenderer.o: src/Platform/OpenGL/OpenGLDeferredRenderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLFog.o: src/Platform/OpenGL/OpenGLFog.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLFrameBuffer.o: src/Platform/OpenGL/OpenGLFrameBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLRendererAPI.o: src/Platform/OpenGL/OpenGLRendererAPI.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLSSAO.o: src/Platform/OpenGL/OpenGLSSAO.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLShader.o: src/Platform/OpenGL/OpenGLShader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLShadows.o: src/Platform/OpenGL/OpenGLShadows.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLTexture.o: src/Platform/OpenGL/OpenGLTexture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLTexture2D.o: src/Platform/OpenGL/OpenGLTexture2D.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLTexture2DArray.o: src/Platform/OpenGL/OpenGLTexture2DArray.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLVertexArray.o: src/Platform/OpenGL/OpenGLVertexArray.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/WindowsInput.o: src/Platform/Windows/WindowsInput.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/WindowsWindow.o: src/Platform/Windows/WindowsWindow.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/cnpch.o: src/cnpch.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuizmo.o: vendor/ImGuizmo/ImGuizmo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/jsoncpp.o: vendor/jsoncpp/jsoncpp.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stb.o: vendor/stb/stb.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stb_impl.o: vendor/stb/stb_impl.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif