# GNU Make workspace makefile autogenerated by Premake

.NOTPARALLEL:

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  GLFW_config = debug
  ImGui_config = debug
  Glad_config = debug
  Chroma_config = debug
  yaml_cpp_config = debug
  Crimson_config = debug
  Sandbox_config = debug
  Crimson_Editor_config = debug
endif
ifeq ($(config),release)
  GLFW_config = release
  ImGui_config = release
  Glad_config = release
  Chroma_config = release
  yaml_cpp_config = release
  Crimson_config = release
  Sandbox_config = release
  Crimson_Editor_config = release
endif
ifeq ($(config),dist)
  GLFW_config = dist
  ImGui_config = dist
  Glad_config = dist
  Chroma_config = dist
  yaml_cpp_config = dist
  Crimson_config = dist
  Sandbox_config = dist
  Crimson_Editor_config = dist
endif

PROJECTS := GLFW ImGui Glad Chroma yaml-cpp Crimson Sandbox Crimson_Editor

.PHONY: all clean help $(PROJECTS) Dependencies

all: $(PROJECTS)

Dependencies: Chroma GLFW Glad ImGui yaml-cpp

GLFW:
ifneq (,$(GLFW_config))
	@echo "==== Building GLFW ($(GLFW_config)) ===="
	@${MAKE} --no-print-directory -C Crimson/vendor/GLFW -f Makefile config=$(GLFW_config)
endif

ImGui:
ifneq (,$(ImGui_config))
	@echo "==== Building ImGui ($(ImGui_config)) ===="
	@${MAKE} --no-print-directory -C Crimson/vendor/imgui -f Makefile config=$(ImGui_config)
endif

Glad:
ifneq (,$(Glad_config))
	@echo "==== Building Glad ($(Glad_config)) ===="
	@${MAKE} --no-print-directory -C Crimson/vendor/Glad -f Makefile config=$(Glad_config)
endif

Chroma:
ifneq (,$(Chroma_config))
	@echo "==== Building Chroma ($(Chroma_config)) ===="
	@${MAKE} --no-print-directory -C Crimson/vendor/Chroma -f Makefile config=$(Chroma_config)
endif

yaml-cpp:
ifneq (,$(yaml_cpp_config))
	@echo "==== Building yaml-cpp ($(yaml_cpp_config)) ===="
	@${MAKE} --no-print-directory -C Crimson/vendor/yaml-cpp -f Makefile config=$(yaml_cpp_config)
endif

Crimson: GLFW Glad Chroma ImGui yaml-cpp
ifneq (,$(Crimson_config))
	@echo "==== Building Crimson ($(Crimson_config)) ===="
	@${MAKE} --no-print-directory -C Crimson -f Makefile config=$(Crimson_config)
endif

Sandbox: Crimson
ifneq (,$(Sandbox_config))
	@echo "==== Building Sandbox ($(Sandbox_config)) ===="
	@${MAKE} --no-print-directory -C Sandbox -f Makefile config=$(Sandbox_config)
endif

Crimson_Editor: Crimson
ifneq (,$(Crimson_Editor_config))
	@echo "==== Building Crimson_Editor ($(Crimson_Editor_config)) ===="
	@${MAKE} --no-print-directory -C Crimson_Editor -f Makefile config=$(Crimson_Editor_config)
endif

clean:
	@${MAKE} --no-print-directory -C Crimson/vendor/GLFW -f Makefile clean
	@${MAKE} --no-print-directory -C Crimson/vendor/imgui -f Makefile clean
	@${MAKE} --no-print-directory -C Crimson/vendor/Glad -f Makefile clean
	@${MAKE} --no-print-directory -C Crimson/vendor/Chroma -f Makefile clean
	@${MAKE} --no-print-directory -C Crimson/vendor/yaml-cpp -f Makefile clean
	@${MAKE} --no-print-directory -C Crimson -f Makefile clean
	@${MAKE} --no-print-directory -C Sandbox -f Makefile clean
	@${MAKE} --no-print-directory -C Crimson_Editor -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  dist"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   GLFW"
	@echo "   ImGui"
	@echo "   Glad"
	@echo "   Chroma"
	@echo "   yaml-cpp"
	@echo "   Crimson"
	@echo "   Sandbox"
	@echo "   Crimson_Editor"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"